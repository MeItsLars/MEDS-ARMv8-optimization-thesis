==================================== BASIC ALGORITHM ====================================
> Initial analysis:
$r_\text{max} \cdot n \cdot \frac{1}{8}$ loads of $A$;
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=r+1}^{m-1} \sum_{c=r}^{n-1} \frac{1}{8}$ add, bitwise AND, and freeze instructions (first inner loop);
$\sum_{r=0}^{r\_\text{max}-1} 1$ finite field inversions;
$\sum_{r=0}^{r\_\text{max}-1} \sum_{c=r}^{n-1} (\frac{1}{8} \cdot 2)$ multiply and reduce instructions (normalize loop);
$\sum_{r=0}^{r\_\text{max}-1} \sum_{c=r}^{n-1} \frac{1}{8}$ combine instructions (normalize loop);
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=r+1}^{m-1} \sum_{c=r}^{n-1} (\frac{1}{8} \cdot 2)$ multiply and reduce instructions (last inner loop);
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=r+1}^{m-1} \sum_{c=r}^{n-1} \frac{1}{8}$ combine, add, subtract and freeze instructions (last inner loop);
$r_\text{max} \cdot n \cdot \frac{1}{8}$ stores of $A$.

> Converting and combining gives:
r_max * n * 1/8
SUM[r=0,r_max-1] SUM[r_2=r+1,m-1] SUM[c=r,n-1] 5/8
SUM[r=0,r_max-1] 115
SUM[r=0,r_max-1] SUM[c=r,n-1] 12/8
SUM[r=0,r_max-1] SUM[c=r,n-1] 1/8
SUM[r=0,r_max-1] SUM[r_2=r+1,m-1] SUM[c=r,n-1] 12/8
SUM[r=0,r_max-1] SUM[r_2=r+1,m-1] SUM[c=r,n-1] 6/8
r_max * n * 1/8

> Grouping by sum gives:
r_max * n * 1/4
SUM[r=0,r_max-1] 115
SUM[r=0,r_max-1] SUM[c=r,n-1] 13/8
SUM[r=0,r_max-1] SUM[r_2=r+1,m-1] SUM[c=r,n-1] 23/8

> Simplifying gives:
r_max * n * 1/4
1      * SUM[r=0,r_max-1] 115
(13/8) * SUM[r=0,r_max-1] (n-r)
(23/8) * SUM[r=0,r_max-1] (m-r-1) * (n-r)

> Simplyfing sum terms gives:
r_max * n * 1/4
1      * SUM[r=0,r_max] 115
(13/8) * SUM[r=0,r_max-1] (n-r)
(23/8) * SUM[r=0,r_max] (mn - mr - nr + r^2 - n + r)

> Removing easy sums gives:
r_max * n * 1/4
1 * (115 * r_max)
(13/8) * (n * r_max - SUM[r=0,r_max-1] r)
(23/8) * (mn * r_max - m * SUM[r=0,r_max-1] r - n * SUM[r=0,r_max-1] r + SUM[r=0,r_max-1] r^2 - n * r_max + SUM[r=0,r_max-1] r)

> Applying arithmetic series gives:
r_max * n * 1/4
115 * r_max
(13/8) * (n * r_max - (r_max - 1) * r_max / 2)
(23/8) * (mn * r_max - m * (r_max - 1) * r_max / 2 - n * (r_max - 1) * r_max / 2 + (r_max - 1) * r_max * (2 * r_max - 1) / 6 - n * r_max + (r_max - 1) * r_max / 2)

==================================== WITH DO_SWAP ====================================
> Initial analysis:
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=r}^{m-1} \frac{1}{8}$ bitwise OR instructions (swap loop 1)

> Converting and combining gives:
SUM[r=0,r_max-1] SUM[r_2=r,m-1] 1/8

> Simplifying gives:
(1/8) * SUM[r=0,r_max-1] (m-r)

> Expanding:
(1/8) * (m * r_max - SUM[r=0,r_max-1] r)

> Applying arithmetic series gives:
(1/8) * (m * r_max - (r_max - 1) * r_max / 2)

==================================== WITH BACKSUB ====================================
> Initial analysis:
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=0}^{r-1} (\frac{1}{8} \cdot 2)$ multiply and reduce instructions (backsub middle loop);
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=0}^{r-1} \frac{1}{8}$ combine, add, subtract, and freeze instructions (backsub middle loop);
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=0}^{r-1} \sum_{c=r_\text{max}}^{n-1} (\frac{1}{8} \cdot 2)$ multiply and reduce instructions (backsub inner loop);
$\sum_{r=0}^{r\_\text{max}-1} \sum_{r_2=0}^{r-1} \sum_{c=r_\text{max}}^{n-1} \frac{1}{8}$ combine, add, subtract, and freeze instructions (backsub inner loop).

> Converting and combining gives:
SUM[r=0,r_max-1] SUM[r_2=0,r-1] 12/8
SUM[r=0,r_max-1] SUM[r_2=0,r-1] 6/8
SUM[r=0,r_max-1] SUM[r_2=0,r-1] SUM[c=r_max,n-1] 12/8
SUM[r=0,r_max-1] SUM[r_2=0,r-1] SUM[c=r_max,n-1] 6/8

> Grouping by sum gives:
SUM[r=0,r_max-1] SUM[r_2=0,r-1] 18/8
SUM[r=0,r_max-1] SUM[r_2=0,r-1] SUM[c=r_max,n-1] 18/8

> Simplifying gives:
(18/8) * SUM[r=0,r_max-1] r
(18/8) * SUM[r=0,r_max-1] r * (n - r_max)

> Removing easy sums gives:
(18/8) * SUM[r=0,r_max-1] r
(18/8) * (n - r_max) * SUM[r=0,r_max-1] r

> Applying arithmetic series gives:
(18/8) * (r_max - 1) * r_max / 2
(18/8) * (n - r_max) * (r_max - 1) * r_max / 2